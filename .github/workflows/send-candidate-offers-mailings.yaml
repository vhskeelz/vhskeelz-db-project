on:
  workflow_dispatch:
jobs:
  send_candidate_offers_mailings:
    strategy:
      matrix:
        mailing_type:
          - num_fits
          - interested
          - new_matches
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install poetry
        run: pipx install poetry
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - name: install xvfb and chromedriver
        if: ${{ matrix.mailing_type == 'interested' }}
        run: |
          sudo apt-get update &&\
          sudo apt-get install -y xvfb &&\
          CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` &&\
          wget https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip &&\
          unzip chromedriver_linux64.zip &&\
          sudo mv chromedriver /usr/local/bin/ &&\
          sudo chown root:root /usr/local/bin/chromedriver &&\
          sudo chmod +x /usr/local/bin/chromedriver
      - name: login to google and get secrets
        env:
          SERVICE_ACCOUNT_B64: ${{ secrets.SERVICE_ACCOUNT_B64 }}
        run: |
          echo "${SERVICE_ACCOUNT_B64}" | base64 -d > service_account.json &&\
          gcloud auth activate-service-account --key-file=service_account.json &&\
          bin/env_secret_restore.sh
      - name: install python module and dependencies
        run: poetry install
      - name: run
        env:
          PROCESSING_RECORD_ENABLED: "true"
          PROCESSING_RECORD_NAME: send-candidate-offers-mailing-${{ matrix.mailing_type }}
          PROCESSING_RECORD_ID: ${{ github.run_id }}
          SERVICE_ACCOUNT_FILE: service_account.json
        run: |
          CMD="poetry run vhskeelz-db send-candidate-offers-mailing ${{ matrix.mailing_type }} --dry-run"
          if [ "${{ matrix.mailing_type }}" == "interested" ]; then
            xvfb-run $CMD
          else
            $CMD
          fi
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.mailing_type }}
          path: .data
