name: Send candidate offers mailings
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      run_args:
        description: 'Arguments to pass to the run command'
        required: false
        default: ''
      no_dry_run:
        description: 'Write "DANGER" to disable dry-run (This is dangerous!)'
        required: false
        default: ''
      with_num_fits:
        description: 'Send num_fits mailing'
        type: boolean
        default: true
      with_interested:
        description: 'Send interested mailing'
        type: boolean
        default: true
      with_new_matches:
        description: 'Send new_matches mailing'
        type: boolean
        default: true
jobs:
  send_candidate_offers_mailings:
    strategy:
      matrix:
        mailing_type:
          - num_fits
          - interested
          - new_matches
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: determine whether to run further steps in this job
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo running on schedule, will run further steps
            echo "RUN_FURTHER_STEPS=true" >> $GITHUB_ENV
          elif [[ ("${{ matrix.mailing_type }}" == "num_fits" && "${{ inputs.with_num_fits }}" == "true") \
             || ("${{ matrix.mailing_type }}" == "interested" && "${{ inputs.with_interested }}" == "true") \
             || ("${{ matrix.mailing_type }}" == "new_matches" && "${{ inputs.with_new_matches }}" == "true") ]]
          then
            echo running further steps
            echo "RUN_FURTHER_STEPS=true" >> $GITHUB_ENV
          else
            echo not running further steps
            echo "RUN_FURTHER_STEPS=false" >> $GITHUB_ENV
          fi
      - name: set env vars
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo setting schedule env vars
            echo "NO_DRY_RUN=DANGER" >> $GITHUB_ENV
            echo "RUN_ARGS=--schedule --test-email-to=default --test-email-update-db" >> $GITHUB_ENV
          else
            echo setting env vars from inputs
            echo "NO_DRY_RUN=${{ inputs.no_dry_run }}" >> $GITHUB_ENV
            echo "RUN_ARGS=${{ inputs.run_args }}" >> $GITHUB_ENV
          fi
      - name: setup vhskeelz-db
        if: env.RUN_FURTHER_STEPS == 'true'
        uses: ./.github/actions/setup-vhskeelz-db
        with:
          selenium: "${{ matrix.mailing_type == 'interested' }}"
          service_account_b64: ${{ secrets.SERVICE_ACCOUNT_B64 }}
      - name: run
        if: env.RUN_FURTHER_STEPS == 'true'
        env:
          PROCESSING_RECORD_ENABLED: "true"
          PROCESSING_RECORD_NAME: ${{ github.event_name }}-send-candidate-offers-mailing-${{ matrix.mailing_type }}
          PROCESSING_RECORD_ID: ${{ github.run_id }}
          SERVICE_ACCOUNT_FILE: service_account.json
        run: |
          CMD="poetry run vhskeelz-db send-candidate-offers-mailing ${{ matrix.mailing_type }}"
          if [ "${NO_DRY_RUN}" != "DANGER" ]; then
            CMD="$CMD --dry-run"
          fi
          CMD="$CMD ${RUN_ARGS}"
          if [ "${{ matrix.mailing_type }}" == "interested" ]; then
            xvfb-run $CMD
          else
            $CMD
          fi
      - name: upload artifacts
        if: env.RUN_FURTHER_STEPS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.mailing_type }}
          path: .data/**/*.csv
